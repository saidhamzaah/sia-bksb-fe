{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamzah\\\\Desktop\\\\BKSB\\\\front_end\\\\bksb-fe\\\\src\\\\pages\\\\recordjournal\\\\example.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./example.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  employeeId: \"01\",\n  name: \"John Doe\",\n  email: \"johndoe@email.com\",\n  position: \"Frontend Developer\"\n}, {\n  employeeId: \"02\",\n  name: \"Sara\",\n  email: \"sara@email.com\",\n  position: \"HR Executive\"\n}, {\n  employeeId: \"03\",\n  name: \"Mike\",\n  email: \"mike@email.com\",\n  position: \"Backend Developer\"\n}];\nconst Example = () => {\n  _s();\n  const [employeeData, setEmployeeData] = React.useState(data);\n  const onChange = (e, employeeId) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const editData = employeeData.map(item => item.employeeId === employeeId && name ? {\n      ...item,\n      [name]: value\n    } : item);\n    setEmployeeData(editData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"ReactJS Editable Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employeeData.map(_ref => {\n          let {\n            employeeId,\n            name,\n            email,\n            position\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"name\",\n                value: name,\n                type: \"text\",\n                onChange: e => onChange(e, employeeId),\n                placeholder: \"Type Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                value: email,\n                type: \"email\",\n                onChange: e => onChange(e, employeeId),\n                placeholder: \"Type Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"position\",\n                type: \"text\",\n                value: position,\n                onChange: e => onChange(e, employeeId),\n                placeholder: \"Type Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, employeeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"x1v29JCWPg6CsQCxiE2+KpPImOI=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","data","employeeId","name","email","position","Example","_s","employeeData","setEmployeeData","onChange","e","value","target","editData","map","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_ref","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Hamzah/Desktop/BKSB/front_end/bksb-fe/src/pages/recordjournal/example.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./example.css\";\r\nconst data = [\r\n  {\r\n    employeeId: \"01\",\r\n    name: \"John Doe\",\r\n    email: \"johndoe@email.com\",\r\n    position: \"Frontend Developer\",\r\n  },\r\n  {\r\n    employeeId: \"02\",\r\n    name: \"Sara\",\r\n    email: \"sara@email.com\",\r\n    position: \"HR Executive\",\r\n  },\r\n  {\r\n    employeeId: \"03\",\r\n    name: \"Mike\",\r\n    email: \"mike@email.com\",\r\n    position: \"Backend Developer\",\r\n  },\r\n];\r\nconst Example = () => {\r\n  const [employeeData, setEmployeeData] = React.useState(data);\r\n\r\n  const onChange = (e, employeeId) => {\r\n    const { name, value } = e.target;\r\n\r\n    const editData = employeeData.map((item) =>\r\n      item.employeeId === employeeId && name ? { ...item, [name]: value } : item\r\n    );\r\n\r\n    setEmployeeData(editData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">ReactJS Editable Table</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Position</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employeeData.map(({ employeeId, name, email, position }) => (\r\n            <tr key={employeeId}>\r\n              <td>\r\n                <input\r\n                  name=\"name\"\r\n                  value={name}\r\n                  type=\"text\"\r\n                  onChange={(e) => onChange(e, employeeId)}\r\n                  placeholder=\"Type Name\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  name=\"email\"\r\n                  value={email}\r\n                  type=\"email\"\r\n                  onChange={(e) => onChange(e, employeeId)}\r\n                  placeholder=\"Type Email\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  name=\"position\"\r\n                  type=\"text\"\r\n                  value={position}\r\n                  onChange={(e) => onChange(e, employeeId)}\r\n                  placeholder=\"Type Position\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}